version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: portfolio_coach_db
    environment:
      POSTGRES_DB: portfolio_coach
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-portfolio_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../deployment/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - portfolio_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d portfolio_coach"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: portfolio_coach_redis
    ports:
      - "6381:6379"
    networks:
      - portfolio_network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Portfolio Coach Application
  portfolio_coach:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: portfolio_coach_app
    environment:
      - DATABASE_URL=postgresql://portfolio_user:${DB_PASSWORD:-portfolio_password}@postgres:5432/portfolio_coach
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/src
      - ENV=production
    env_file:
      - ../.env
    volumes:
      - ../logs:/app/logs
      - ../data:/app/data
      - ../src:/app/src
    ports:
      - "8001:5000"
    networks:
      - portfolio_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.insert(0, '/app/src'); from config import Config; print('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Web Interface
  portfolio_web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: portfolio_coach_web
    environment:
      - DATABASE_URL=postgresql://portfolio_user:${DB_PASSWORD:-portfolio_password}@postgres:5432/portfolio_coach
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/src
      - ENV=production
    env_file:
      - ../.env
    volumes:
      - ../logs:/app/logs
      - ../data:/app/data
      - ../src:/app/src
    ports:
      - "5000:5000"
    networks:
      - portfolio_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "run.py", "--mode", "web"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  portfolio_network:
    driver: bridge
